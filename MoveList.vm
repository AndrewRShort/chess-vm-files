function MoveList.init 0
push constant 4096
pop static 0
push constant 16384
pop static 1
push constant 0
return
function MoveList.final 0
push constant 0
return
function MoveList.new 0
push constant 3
call Memory.alloc 1
pop pointer 0
push argument 0
call Array.new 1
pop this 0
push argument 1
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
call Array.new 1
pop this 1
goto IF_END0
label IF_FALSE0
push constant 0
pop this 1
label IF_END0
push constant 0
pop this 2
push pointer 0
return
function MoveList.dispose 0
push argument 0
pop pointer 0
push this 0
call Array.dispose 1
pop temp 0
push this 1
push constant 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 1
call Array.dispose 1
pop temp 0
label IF_FALSE0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function MoveList.getMoves 0
push argument 0
pop pointer 0
push this 0
return
function MoveList.getCount 0
push argument 0
pop pointer 0
push this 2
return
function MoveList.resetCount 0
push argument 0
pop pointer 0
push constant 0
pop this 2
push constant 0
return
function MoveList.addMove 0
push argument 0
pop pointer 0
push this 2
push this 0
add
push argument 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 2
push this 1
add
push argument 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 2
push constant 1
add
pop this 2
push constant 0
return
function MoveList.addMoveIgnoreRank 0
push argument 0
pop pointer 0
push this 2
push this 0
add
push argument 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 2
push constant 1
add
pop this 2
push constant 0
return
function MoveList.removeMove 0
push argument 0
pop pointer 0
push this 2
push constant 1
sub
pop this 2
push constant 0
return
function MoveList.moveBestRankedMoveToPos 4
push argument 0
pop pointer 0
push argument 1
pop local 1
push argument 1
push this 1
add
pop pointer 1
push that 0
pop local 2
push argument 1
push constant 1
add
pop local 0
label WHILE_EXP0
push local 0
push this 2
lt
not
if-goto WHILE_END0
push local 0
push this 1
add
pop pointer 1
push that 0
push local 2
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
pop local 1
push local 0
push this 1
add
pop pointer 1
push that 0
pop local 2
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push local 1
push this 0
add
pop pointer 1
push that 0
pop local 3
push local 1
push this 1
add
push argument 1
push this 1
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push this 0
add
push argument 1
push this 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 1
push this 1
add
push local 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 1
push this 0
add
push local 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function MoveList.rankPvMove 2
push argument 0
pop pointer 0
push argument 1
call BoardState.getPvMove 1
pop local 1
label WHILE_EXP0
push local 0
push this 2
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
push local 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push this 1
add
push local 0
push this 1
add
pop pointer 1
push that 0
push static 1
or
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function MoveList.rankKillers 4
push argument 0
pop pointer 0
push argument 1
call BoardState.getKillerMoves 1
pop local 3
push constant 0
push local 3
add
pop pointer 1
push that 0
pop local 1
push constant 1
push local 3
add
pop pointer 1
push that 0
pop local 2
label WHILE_EXP0
push local 0
push this 2
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
push local 1
eq
push local 0
push this 0
add
pop pointer 1
push that 0
push local 2
eq
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push this 1
add
push local 0
push this 1
add
pop pointer 1
push that 0
push static 0
or
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
