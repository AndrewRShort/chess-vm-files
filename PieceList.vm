function PieceList.new 1
push constant 2
call Memory.alloc 1
pop pointer 0
push constant 0
pop this 1
push constant 16
call Array.new 1
pop this 0
label WHILE_EXP0
push local 0
push constant 16
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
call Piece.new 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push pointer 0
return
function PieceList.dispose 2
push argument 0
pop pointer 0
label WHILE_EXP0
push local 0
push constant 16
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
pop local 1
push local 1
call Piece.dispose 1
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push this 0
call Array.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function PieceList.getPieces 0
push argument 0
pop pointer 0
push this 0
return
function PieceList.getCount 0
push argument 0
pop pointer 0
push this 1
return
function PieceList.resetCount 0
push argument 0
pop pointer 0
push constant 0
pop this 1
push constant 0
return
function PieceList.addPiece 1
push argument 0
pop pointer 0
push this 1
push this 0
add
pop pointer 1
push that 0
pop local 0
push local 0
push argument 1
call Piece.setValue 2
pop temp 0
push local 0
push argument 2
call Piece.setSquare 2
pop temp 0
push local 0
push constant 0
call Piece.setDead 2
pop temp 0
push this 1
push constant 1
add
pop this 1
push local 0
return
function PieceList.compress 3
push argument 0
pop pointer 0
push constant 0
pop local 2
label WHILE_EXP0
push local 0
push this 1
lt
push local 2
not
and
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
pop local 1
push local 1
call Piece.isDead 1
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
pop local 2
goto IF_END0
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
label IF_END0
goto WHILE_EXP0
label WHILE_END0
push this 1
push constant 1
sub
pop this 1
label WHILE_EXP1
push local 0
push this 1
lt
not
if-goto WHILE_END1
push local 0
push this 0
add
push local 0
push constant 1
add
push this 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP1
label WHILE_END1
push this 1
push this 0
add
push local 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function PieceList.getKingSquare 1
push argument 0
pop pointer 0
push this 1
push constant 1
sub
push this 0
add
pop pointer 1
push that 0
pop local 0
push local 0
call Piece.getSquare 1
return
